# This file was *autogenerated* from the file gen.sage
from sage.all_cmdline import *   # import sage library
from random import randint

with open("flag.txt", "r") as f:
    flag = [ord(i) for i in f.read().strip()]

size = len(flag)

m = matrix(QQ, size, size)

for i in range(size):
    for j in range(i, size):
        m[i, j] = randint(-(2 ** 20), (2 ** 20))

m[0, 0] = flag[0]

for i in range(size - 1):
    m[i + 1, i + 1] = flag[(i + 1) % len(flag)] + m[i, i]

arr = "[" + ",".join([str(list(row)) for row in m]) + "]"

out = """
#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>

#define N {size}

int m[N][N] = {arr};

int det(int mat[N][N], int n) {{
    int D = 0;

    if (n == 1)
        return mat[0][0];

    int temp[N][N];

    int sign = 1;

    for (int f = 0; f < n; f++) {{
        int p = 0, q = 0;

        for (int i = 0; i < n; i++) {{
            for (int j = 0; j < n; j++) {{
                if (i != f && j != 0) {{
                    temp[p][q++] = mat[i][j];

                    if (q == n - 1) {{
                        q = 0;
                        p++;
                    }}
                }}
            }}
        }}

        D += sign * mat[f][0] * det(temp, n - 1);
        sign = -sign;
    }}

    return D;
}}

int main() {{
    int flag[N];

    flag[0] = getchar();

    for (int i = 1; i < N; i++) {{
        int ch = getchar();
        flag[i] = flag[i - 1] + ch;
    }}

    for (int i = 0; i < N; i++) {{
        int mi[N][N];

        for (int r = 0; r < N; r++) {{
            for (int s = 0; s < N; s++) {{
                if (r == s) {{
                    mi[r][s] = m[r][s] - flag[i];
                }} else {{
                    mi[r][s] = m[r][s];
                }}
            }}
        }}

        int d = det(mi, N);
        if (d != 0) {{
            printf("Buried in the sands...");
            exit(1);
        }}
    }}

    printf("You made it to the top!");
    return 0;
}}
"""

program = out.format(
    size=size,
    arr=arr
)

with open("gizaa.c", "w") as f:
    f.write(program)
